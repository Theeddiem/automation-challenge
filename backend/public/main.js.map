{"version":3,"sources":["./src/app/item-row/item-row.component.ts","./src/app/item-row/item-row.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { log } from 'util';\nimport { Item } from '../item';\n\n@Component({\n  selector: 'item-row',\n  templateUrl: './item-row.component.html',\n  styleUrls: ['./item-row.component.css']\n})\nexport class ItemRowComponent implements OnInit {\n\n\n  updatedItem : Item;\n\n  @Input() public depositCallBack: Function; \n\n  @Input() currentItem : Item\n\n\n\n  @Output() updateEvent = new EventEmitter<Item>()\n\n  @Output() deleteEvent = new EventEmitter<Item>()\n\n  @Output() withdrawEvent = new EventEmitter<object>()\n\n  @Output() depositEvent = new EventEmitter<object>()\n\n  showUpdate : boolean;\n\n  amount : number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.showUpdate = false;\n    this.updatedItem = {name:\"\", description: \"\" , count: 0 , id: \"\"}\n  }\n\n  invokeUpdate() { \n\n    if(!this.showUpdate)\n    {\n      this.showUpdate = true\n    }\n    else \n    {\n      if(this.updatedItem.description!=\"\" && this.updatedItem.name!=\"\")\n    {\n       this.updatedItem.id = this.currentItem.id;\n       this.updateEvent.emit(this.updatedItem);\n     }\n     this.showUpdate = false\n\n    }\n\n }\n\n  invokeDelete()\n  {\n    this.deleteEvent.emit(this.currentItem);\n  }\n\n  invokeWithdraw(){\n    if(this.amount > 0)\n    this.withdrawEvent.emit(this.getPatchObject());\n  }\n\n  invokeDeposit(){\n    if(this.amount > 0)\n    this.depositEvent.emit(this.getPatchObject());   \n  }\n\n  private getPatchObject()\n  {\n    return {id:this.currentItem.id, amount:this.amount};\n  }\n\n}\n","<div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\"  style=\"display:grid\">\n    <div class=\"input-group\">\n      <input type=\"number\" class=\"form-control\" placeholder=\"Amount to withdraw or deposit\" aria-describedby=\"basic-addon2\" [(ngModel)]=\"amount\" [ngModelOptions]=\"{standalone: true}\">\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-outline-secondary\"   type=\"button\" (click)=\"invokeDeposit()\" >Deposit</button>\n        <button class=\"btn btn-outline-secondary\" type=\"button\" (click)=\"invokeWithdraw()\" >Withdraw</button>\n        <button type=\"button\" class=\"btn btn-primary\"  (click)=\"invokeUpdate()\">Update</button>\n        <button type=\"button\" class=\"btn btn-danger\"  (click)=\"invokeDelete()\">Delete</button>\n      </div>\n    </div>\n    <div class=\"update-group\" *ngIf=showUpdate   >\n      <div class=\"input-group\">\n        <input type=\"text\" placeholder=\"Enter New Product Name\" class=\"form-control\"  [(ngModel)]=\"updatedItem.name\">\n        <input type=\"text\" placeholder=\"Enter New Product Description\" class=\"form-control\"  [(ngModel)]=\"updatedItem.description\">\n        <input type=\"number\" placeholder=\"Enter New Amount\" class=\"form-control\"  [(ngModel)]=\"updatedItem.count\">\n      </div>\n    </div>\n\n    \n</div> \n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport {Item} from \"./item\";\nimport  {map}  from 'rxjs/operators'\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DashBoard';\n  inventoryList : Item[];\n  itemValue : Item;\n\n  constructor(private http:HttpClient) {}\n\n  ngOnInit()\n  {\n    this.clearItemValue();\n    this.getItems();\n  }\n\n  clearItemValue(){\n    this.itemValue = {\"name\": \"\", \"description\": \"\", \"count\": 0, \"id\": null}\n  }\n\n  private getItems(){\n    this.inventoryList = [];\n    this.http.get('http://localhost:3000/api/items')\n    .pipe(\n      map( (responseData:Item) => {\n        const arr = []\n        for(const key in responseData)\n        {  \n          this.inventoryList.push(responseData[key])\n        }\n\n        return arr;\n      })     \n    )\n    .subscribe(items =>{\n      console.log(items);      \n    })    \n  }\n\n  addItem()\n  {\n    this.http.post('http://localhost:3000/api/items',this.itemValue).subscribe(() => {\n      this.getItems()\n    });\n  }\n\n  updateItem(item:Item)\n  {  \n    console.log(item);\n    this.http.put('http://localhost:3000/api/items',item).subscribe(() => {\n      this.getItems()\n    },  \n    );\n  }\n\n deleteItem(item:Item){\n      this.http.delete(`http://localhost:3000/api/items/${item.id}`).subscribe( () => {\n        this.getItems()})\n  }\n\n  depositAmount(request){\n   this.http.patch('http://localhost:3000/api/items/deposit',request).subscribe(() => {\n    this.getItems()})\n  }\n\n  withdrawAmount(request){\n    this.http.patch('http://localhost:3000/api/items/withdraw',request).subscribe(()=> {\n      this.getItems()})  \n  }\n}\n","<div class=\"container\"> \n  <form>\n    <div class=\"form-group\">\n      <label> Product Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"product-name\" aria-describedby=\"emailHelp\" placeholder=\"Enter Product Name\" [(ngModel)]=\"itemValue.name\" name=\"Itemname\">\n    </div>\n    <div class=\"form-group\">\n      <label> Product Description</label>\n      <input type=\"text\" class=\"form-control\" id=\"product-description\" placeholder=\"Enter Product Description\" [(ngModel)]=\"itemValue.description\" [ngModelOptions]=\"{standalone: true}\" >\n    </div>\n    <div class=\"form-group\">\n      <label>Amount</label>\n      <input type=\"number\" class=\"form-control\" id=\"product-amount\" placeholder=\"Enter Amount\" [(ngModel)]=\"itemValue.count\" [ngModelOptions]=\"{standalone: true}\" >\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\" (click)=\"addItem()\"> Add</button>\n  </form>\n\n\n  \n  <ul class=\"list-group\" >\n\n    <li *ngFor = \"let item of inventoryList\" class=\"list-group-item\"  > <h3>Name : {{item.name}}</h3> <h4>Description: {{item.description}}</h4> <h5>Amount: {{ item.count}}</h5>\n      <item-row [showUpdate] = \"showUpdate\" [currentItem]=(item) (updateEvent)=\"updateItem($event)\"  (deleteEvent)=\"deleteItem($event)\" (withdrawEvent)=\"withdrawAmount($event)\" (depositEvent) =\"depositAmount($event)\"></item-row>\n   </li>\n  </ul>\n </div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ItemRowComponent } from './item-row/item-row.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ItemRowComponent,\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n   \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}